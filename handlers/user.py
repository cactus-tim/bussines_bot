from aiogram.filters import Command, CommandStart
from aiogram import Router, F
from aiogram.filters.command import CommandObject
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from handlers.error import safe_send_message
from bot_instance import bot
from database.req import get_user, create_user, create_user_x_event_row, update_user, get_all_user_events, get_event, \
    update_user_x_event_row_status
from keyboards.keyboards import single_command_button_keyboard, events_ikb
from handlers.quest import start

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message, command: CommandObject):
    hash_value = command.args
    user = await get_user(message.from_user.id)
    if hash_value:
        if hash_value[:3] == 'reg':
            if user == "not created":
                await create_user(message.from_user.id,
                                  {'handler': message.from_user.username, 'first_contact': hash_value[4:]})
                name = message.from_user.first_name if message.from_user.first_name else message.from_user.username
                await safe_send_message(bot, message.from_user.id,
                                        text=f"{name}, –ø—Ä–∏–≤–µ—Ç –æ—Ç –∫–æ–º–∞–Ω–¥—ã HSE SPB Business Club üéâ\n\n"
                                             "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö, –ø–æ–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ "
                                             "–æ—Ç–±–æ—Ä –≤ –∫–æ–º–∞–Ω–¥—É"
                                             "–∏ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–ª—É–±, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω—Å—ã "
                                             "–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ —á–∏—Å–ª–µ –ø–µ—Ä–≤—ã—Ö.\n\n"
                                             "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏: —Ç–∞–∫ —Ç—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—à—å –Ω–∏ "
                                             "–æ–¥–Ω–æ –≤–∞–∂–Ω–æ–µ"
                                             "—Å–æ–±—ã—Ç–∏–µ –∫–ª—É–±–∞.\n\n"
                                             "–¢–∞–∫–∂–µ —É –Ω–∞—Å –µ—Å—Ç—å Telegram-–∫–∞–Ω–∞–ª, –≥–¥–µ –º—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—É–±–ª–∏–∫—É–µ–º –ø–æ–ª–µ–∑–Ω—ã–µ "
                                             "–ø–æ—Å—Ç—ã –Ω–∞ —Ç–µ–º—É"
                                             "–±–∏–∑–Ω–µ—Å–∞.\n"
                                             "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è: @HSE_SPB_Business_Club",
                                        reply_markup=single_command_button_keyboard())
            await create_user_x_event_row(message.from_user.id, hash_value[4:])
            await safe_send_message(bot, message, text="–í—ã —É–¥–∞—á–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!",
                                    reply_markup=single_command_button_keyboard())
        elif hash_value[:3] == 'ref':
            if hash_value[3] == '_':
                event_part, user_id = hash_value.split("__")
                event_name = event_part.replace("ref_", "")
                user_id = int(user_id)
                if user == "not created":
                    await create_user(message.from_user.id,
                                      {'handler': message.from_user.username, 'first_contact': event_name})
                    # TODO: give reward to both
                    await safe_send_message(bot, user_id, f"–ü–æ —Ç–≤–æ–µ–π —Ä–µ—Ñ–µ–∞–ª—å–Ω–æ–π —Å—Å–ª—ã–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è "
                                                                      f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}!")

                await safe_send_message(bot, user_id, f"–ü–æ —Ç–≤–æ–µ–π —Ä–µ—Ñ–µ–∞–ª—å–Ω–æ–π —Å—Å–ª—ã–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ"
                                                      f" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}!")
                # TODO: give reward to both (ref_v2)
                # TODO: some messages, discuss wth Anton/Vitaly
                await create_user_x_event_row(message.from_user.id, event_name)
            else:
                if user == "not created":
                    await create_user(message.from_user.id,
                                      {'handler': message.from_user.username, 'first_contact': hash_value[3:]})
                    # TODO: give reward to both
                    await safe_send_message(bot, int(hash_value[3:]), f"–ü–æ —Ç–≤–æ–µ–π —Ä–µ—Ñ–µ–∞–ª—å–Ω–æ–π —Å—Å–ª—ã–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è "
                                                                      f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}!")
                name = message.from_user.first_name if message.from_user.first_name else message.from_user.username
                await safe_send_message(bot, message, text=f"{name}, –ø—Ä–∏–≤–µ—Ç –æ—Ç –∫–æ–º–∞–Ω–¥—ã HSE SPB Business Club üéâ\n\n"
                                                           "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö, –ø–æ–¥–∞–≤–∞—Ç—å "
                                                           "–∑–∞—è–≤–∫—É –Ω–∞ –æ—Ç–±–æ—Ä –≤ –∫–æ–º–∞–Ω–¥—É"
                                                           "–∏ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–ª—É–±, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω—Å—ã "
                                                           "–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ —á–∏—Å–ª–µ –ø–µ—Ä–≤—ã—Ö.\n\n"
                                                           "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏: —Ç–∞–∫ —Ç—ã –Ω–µ "
                                                           "–ø—Ä–æ–ø—É—Å—Ç–∏—à—å –Ω–∏ –æ–¥–Ω–æ –≤–∞–∂–Ω–æ–µ"
                                                           "—Å–æ–±—ã—Ç–∏–µ –∫–ª—É–±–∞.\n\n"
                                                           "–¢–∞–∫–∂–µ —É –Ω–∞—Å –µ—Å—Ç—å Telegram-–∫–∞–Ω–∞–ª, –≥–¥–µ –º—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—É–±–ª–∏–∫—É–µ–º "
                                                           "–ø–æ–ª–µ–∑–Ω—ã–µ –ø–æ—Å—Ç—ã –Ω–∞ —Ç–µ–º—É"
                                                           "–±–∏–∑–Ω–µ—Å–∞.\n"
                                                           "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è: @HSE_SPB_Business_Club",
                                        reply_markup=single_command_button_keyboard())
        elif hash_value == 'otbor':
            if user == "not created":
                await create_user(message.from_user.id,
                                  {'handler': message.from_user.username, 'first_contact': hash_value})
            name = message.from_user.first_name if message.from_user.first_name else message.from_user.username
            await safe_send_message(bot, message, f'–ü—Ä–∏–≤–µ—Ç, {name}!', reply_markup=single_command_button_keyboard())
            await start(message)
        else:
            if user == "not created":
                await create_user(message.from_user.id,
                                  {'handler': message.from_user.username, 'first_contact': hash_value})
                name = message.from_user.first_name if message.from_user.first_name else message.from_user.username
                await safe_send_message(bot, message.from_user.id,
                                        text=f"{name}, –ø—Ä–∏–≤–µ—Ç –æ—Ç –∫–æ–º–∞–Ω–¥—ã HSE SPB Business Club üéâ\n\n"
                                             "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö, –ø–æ–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ "
                                             "–æ—Ç–±–æ—Ä –≤ –∫–æ–º–∞–Ω–¥—É"
                                             "–∏ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–ª—É–±, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω—Å—ã "
                                             "–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ —á–∏—Å–ª–µ –ø–µ—Ä–≤—ã—Ö.\n\n"
                                             "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏: —Ç–∞–∫ —Ç—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—à—å –Ω–∏ "
                                             "–æ–¥–Ω–æ –≤–∞–∂–Ω–æ–µ"
                                             "—Å–æ–±—ã—Ç–∏–µ –∫–ª—É–±–∞.\n\n"
                                             "–¢–∞–∫–∂–µ —É –Ω–∞—Å –µ—Å—Ç—å Telegram-–∫–∞–Ω–∞–ª, –≥–¥–µ –º—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—É–±–ª–∏–∫—É–µ–º –ø–æ–ª–µ–∑–Ω—ã–µ "
                                             "–ø–æ—Å—Ç—ã –Ω–∞ —Ç–µ–º—É"
                                             "–±–∏–∑–Ω–µ—Å–∞.\n"
                                             "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è: @HSE_SPB_Business_Club",
                                        reply_markup=single_command_button_keyboard())
            await update_user_x_event_row_status(message.from_user.id, hash_value, 'been')
            await safe_send_message(bot, message, text="QR-–∫–æ–¥ —É–¥–∞—á–Ω–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω!",
                                    reply_markup=single_command_button_keyboard())
    else:
        if user == "not created":
            await create_user(message.from_user.id, {'handler': message.from_user.username})
        name = message.from_user.first_name if message.from_user.first_name else message.from_user.username
        await safe_send_message(bot, message, text=f"{name}, –ø—Ä–∏–≤–µ—Ç –æ—Ç –∫–æ–º–∞–Ω–¥—ã HSE SPB Business Club üéâ\n\n"
                                                   "–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö, –ø–æ–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ—Ç–±–æ—Ä –≤ –∫–æ–º–∞–Ω–¥—É "
                                                   "–∏ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–ª—É–±, –∞ —Ç–∞–∫–∂–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω—Å—ã "
                                                   "–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ —á–∏—Å–ª–µ –ø–µ—Ä–≤—ã—Ö.\n\n"
                                                   "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏: —Ç–∞–∫ —Ç—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—à—å –Ω–∏ –æ–¥–Ω–æ –≤–∞–∂–Ω–æ–µ "
                                                   "—Å–æ–±—ã—Ç–∏–µ –∫–ª—É–±–∞.\n\n"
                                                   "–¢–∞–∫–∂–µ —É –Ω–∞—Å –µ—Å—Ç—å Telegram-–∫–∞–Ω–∞–ª, –≥–¥–µ –º—ã —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—É–±–ª–∏–∫—É–µ–º –ø–æ–ª–µ–∑–Ω—ã–µ –ø–æ—Å—Ç—ã –Ω–∞ —Ç–µ–º—É "
                                                   "–±–∏–∑–Ω–µ—Å–∞.\n"
                                                   "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è: @HSE_SPB_Business_Club",
                                reply_markup=single_command_button_keyboard())


@router.message(Command("info"))
async def cmd_info(message: Message):
    user = await get_user(message.from_user.id)
    if user.is_superuser:
        await safe_send_message(bot, message, text="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
                                                   "/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
                                                   "/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞–¥–∞—Ö\n"
                                                   "/quest - –ø—Ä–æ–π—Ç–∏ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–±–æ—Ä–∞ –≤ –∫–æ–º–∞–Ω–¥—É\n"
                                                   "/send_stat - –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö\n"
                                                   "/send_post - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n"
                                                   "/add_event - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
                                                   "/end_event - –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ\n")
    else:
        await safe_send_message(bot, message, text="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
                                                   "/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
                                                   "/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞–¥–∞—Ö\n"
                                                   "/quest - –ø—Ä–æ–π—Ç–∏ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–±–æ—Ä–∞ –≤ –∫–æ–º–∞–Ω–¥—É\n",
                                reply_markup=single_command_button_keyboard())


@router.message(Command("get_ref"))
async def get_ref(message: Message):
    await safe_send_message(bot, message, "–í–æ—Ç —Ç–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
                                          f"https://t.me/brewbegtbot?start=ref{message.from_user.id}"
                            # f"https://t.me/?start={message.from_user.id}"
                            )


@router.message(Command("get_ref_to_event"))
async def get_ref_v2_part1(message: Message):
    events = await get_all_user_events(message.from_user.id)
    if not events:
        await safe_send_message(bot, message, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –Ω–∏ –Ω–∞ –æ–¥–Ω–æ —Å–æ–±—ã—Ç–∏–µ –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∏–∫–æ–≥–æ –Ω–∏–∫—É–¥–∞ "
                                              "–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å")
        return
    await safe_send_message(bot, message, "–í—ã–±–µ—Ä–µ—Ç–∏ —Å–æ–±—ã—Ç–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", reply_markup=events_ikb(events))


@router.callback_query()
async def get_ref_v2_part2(callback: CallbackQuery):
    event = await get_event(callback.data)
    await safe_send_message(bot, callback, f"–í–æ—Ç —Ç–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —Å–æ–±—ã—Ç–∏–µ {event.desc}:\n"
                                           f"https://t.me/brewbegtbot?start=ref_{event.name}__{callback.from_user.id}"
                            # f"https://t.me/?start=ref_{event.name}&{callback.from_user.id}"
                            )
